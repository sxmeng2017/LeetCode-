如果有人知道怎么回事，请告诉我，可有偿，比如一杯奶茶（笑）

bug如下
对于44_13.7中的代码是先计算行，再计算列的，如果先计算列再算行，就会报错

报错原因不明，但导致错误结果的理由很简单，操作一个行时，所有行的相同列处会一起变。

class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        res = [[1] * m] + [[1] + [0] * (m-1)] * (n - 1)
        for i in range(1, m):
            for j in range(1, n):
                print(res)
                print(i,j)
                res[j][i] = res[j][i-1] + res[j-1][i]
                print(res[2][1])
        return res


res如下哦，只给出前两步的结果，看看意思

[[1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0]]
1 1
2
[[1, 1, 1, 1, 1, 1, 1], [1, 2, 0, 0, 0, 0, 0], [1, 2, 0, 0, 0, 0, 0]]
1 2
3
最后结果
[[1, 1, 1, 1, 1, 1, 1], [1, 3, 7, 15, 31, 63, 127], [1, 3, 7, 15, 31, 63, 127]]


然而更奇怪的事，如果直接用一维数组去计算，按行（44_13.7_2）比按列(36_13.8)慢
不明所以